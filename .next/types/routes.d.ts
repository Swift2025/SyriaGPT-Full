// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/[lang]" | "/[lang]/about" | "/[lang]/forgot-password" | "/[lang]/help" | "/[lang]/intelligent-qa" | "/[lang]/login" | "/[lang]/privacy" | "/[lang]/profile" | "/[lang]/register" | "/[lang]/reset-password" | "/[lang]/settings" | "/[lang]/terms" | "/[lang]/upgrade" | "/[lang]/verify-email"
type AppRouteHandlerRoutes = "/api/chat" | "/api/files" | "/api/intelligent-qa"
type PageRoutes = never
type LayoutRoutes = "/" | "/[lang]"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/[lang]": { "lang": string; }
  "/[lang]/about": { "lang": string; }
  "/[lang]/forgot-password": { "lang": string; }
  "/[lang]/help": { "lang": string; }
  "/[lang]/intelligent-qa": { "lang": string; }
  "/[lang]/login": { "lang": string; }
  "/[lang]/privacy": { "lang": string; }
  "/[lang]/profile": { "lang": string; }
  "/[lang]/register": { "lang": string; }
  "/[lang]/reset-password": { "lang": string; }
  "/[lang]/settings": { "lang": string; }
  "/[lang]/terms": { "lang": string; }
  "/[lang]/upgrade": { "lang": string; }
  "/[lang]/verify-email": { "lang": string; }
  "/api/chat": {}
  "/api/files": {}
  "/api/intelligent-qa": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/[lang]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
